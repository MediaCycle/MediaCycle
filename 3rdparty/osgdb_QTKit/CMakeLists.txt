# Forked OSG QTKit plugin from version 3.0.0
IF(BUILD_APPS AND OSG_FOUND AND SUPPORT_VIDEO AND QTKIT_FOUND)
# From OSG's CMakeLists.txt
SET(OSG_PLUGINS osgPlugins-${OPENSCENEGRAPH_VERSION})

SET(OSG_PLUGIN_PREFIX "")

IF (CYGWIN)
    SET(OSG_PLUGIN_PREFIX "cygwin_")
ENDIF()

IF(MINGW)
    SET(OSG_PLUGIN_PREFIX "mingw_")
ENDIF()

SET(OPENSCENEGRAPH_USER_DEFINED_DYNAMIC_OR_STATIC "SHARED")
SET(DYNAMIC_OPENSCENEGRAPH ON)

# Adapted
IF(APPLE OR UNIX)
    SET(OSG_PLUGIN_SUFFIX "so") 
ELSE()
    SET(OSG_PLUGIN_SUFFIX "dll")
ENDIF()

SET(OPENSCENEGRAPH_SONAMES TRUE)

# From OSG's src/osgPlugin/CMakeLists.txt
SET(CMAKE_SHARED_MODULE_PREFIX ${OSG_PLUGIN_PREFIX})

#IF(MSVC80 OR MSVC90)
#    IF(NOT OSG_MSVC_GENERATE_PLUGINS_AND_WRAPPERS_MANIFESTS)
#        SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /MANIFEST:NO")
#    ENDIF()
#ENDIF()

SET(TARGET_DEFAULT_PREFIX "osgdb_")
SET(TARGET_DEFAULT_LABEL_PREFIX "Plugins")
SET(TARGET_COMMON_LIBRARIES ${OSG_LIBRARY} ${OSGDB_LIBRARY} ${OSGUTIL_LIBRARY} ${OPENTHREADS_LIBRARY})

# From OSG's src/osgPlugin/QTKit/CMakeLists.txt
INCLUDE_DIRECTORIES( ${QTKIT_INCLUDE_DIR} )

SET(TARGET_SRC 
    ReaderWriterQTKit.mm
)

SET(TARGET_LIBRARIES_VARS QTKIT_LIBRARY COCOA_LIBRARY QUICKTIME_LIBRARY COREVIDEO_LIBRARY)
#SET(TARGET_EXTERNAL_LIBRARIES ${QTKIT_LIBRARY} ${COCOA_LIBRARY} ${QUICKTIME_LIBRARY} ${COREVIDEO_LIBRARY} )
SET(TARGET_ADDED_LIBRARIES osgViewer )


IF(CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-deprecated-declarations")
ENDIF()


#### end var setup  ###
# From OSG's CMakeModules/OsgMacroUtils.cmake
INCLUDE (${CMAKE_SOURCE_DIR}/CMakeModules/OsgMacroUtils.cmake)

SETUP_PLUGIN(QTKit)

IF(USE_DEBUG)
    INSTALL(FILES ${CMAKE_BINARY_DIR}/3rdparty/osg_QTKit/osg_QTKit.so DESTINATION ${OSG_LIBRARY_DIR}/osgPlugins-${OPENSCENEGRAPH_VERSION})
ENDIF()

MESSAGE("[X] QTKit plugin for OpenSceneGraph")
ELSE()
MESSAGE("[ ] QTKit plugin for OpenSceneGraph")
ENDIF()