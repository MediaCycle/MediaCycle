IF(BUILD_APPS AND OSG_FOUND AND RSVG_FOUND AND CAIRO_FOUND)

# From OSG's CMakeLists.txt
SET(OSG_PLUGINS osgPlugins-${OPENSCENEGRAPH_VERSION})

SET(OSG_PLUGIN_PREFIX "")

IF (CYGWIN)
    SET(OSG_PLUGIN_PREFIX "cygwin_")
ENDIF()

# Adapted
IF(MINGW AND NOT CMAKE_TOOLCHAIN_FILE)
    SET(OSG_PLUGIN_PREFIX "mingw_")
ENDIF()

IF(NOT MINGW AND NOT CMAKE_TOOLCHAIN_FILE)
	SET(OPENSCENEGRAPH_USER_DEFINED_DYNAMIC_OR_STATIC "SHARED")
	SET(DYNAMIC_OPENSCENEGRAPH ON)
ENDIF()

IF(APPLE OR UNIX)
    SET(OSG_PLUGIN_SUFFIX "so") 
ELSE()
    SET(OSG_PLUGIN_SUFFIX "dll")
ENDIF()

SET(OPENSCENEGRAPH_SONAMES TRUE)

# From OSG's src/osgPlugin/CMakeLists.txt
SET(CMAKE_SHARED_MODULE_PREFIX ${OSG_PLUGIN_PREFIX})

#IF(MSVC80 OR MSVC90)
#    IF(NOT OSG_MSVC_GENERATE_PLUGINS_AND_WRAPPERS_MANIFESTS)
#        SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /MANIFEST:NO")
#    ENDIF()
#ENDIF()

SET(TARGET_DEFAULT_PREFIX "osgdb_")
SET(TARGET_DEFAULT_LABEL_PREFIX "Plugins")
SET(TARGET_COMMON_LIBRARIES ${OSG_LIBRARY} ${OSGDB_LIBRARY} ${OSGUTIL_LIBRARY} ${OPENTHREADS_LIBRARY})

# From OSG's src/osgPlugin/svg/CMakeLists.txt
INCLUDE_DIRECTORIES( ${RSVG_INCLUDE_DIRS} ${CAIRO_INCLUDE_DIRS})
LINK_DIRECTORIES(${RSVG_LIBRARY_DIRS} ${CAIRO_LIBRARY_DIRS})
LINK_LIBRARIES(${RSVG_LIBRARIES} ${CAIRO_LIBRARIES})


SET(TARGET_SRC ReaderWriterSVG.cpp )
#### end var setup  ###
# From OSG's cmake/OsgMacroUtils.cmake
INCLUDE (${CMAKE_SOURCE_DIR}/cmake/OsgMacroUtils.cmake)
SETUP_PLUGIN(svg svg)

SET_TARGET_PROPERTIES(osgdb_svg PROPERTIES FOLDER "${FOLDERNAME}")
MESSAGE("[X] svg plugin for OpenSceneGraph")
ELSE()
MESSAGE("[ ] svg plugin for OpenSceneGraph")
ENDIF()