SET(MEDIA_TYPE "video")
SET(PLUGIN_NAME "video-thumbnailer-resize")
SET(MC_MEDIA_LIBS "image-core;${MEDIA_TYPE}-core")
list(APPEND 3RDPARTY_NAMES "FFmpeg")
list(APPEND 3RDPARTY_LICENSES "LPGL")
list(APPEND 3RDPARTY_URLS "http://www.ffmpeg.org")

FIND_PROGRAM(FFMPEG NAMES ffmpeg)
IF(SUPPORT_VIDEO AND FFMPEG_FOUND AND FFMPEG)

	IF(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/ACFFmpegCommandline.h)
            execute_process(COMMAND "rm" "${CMAKE_CURRENT_BINARY_DIR}/ACFFmpegCommandline.h")
        ENDIF()
	file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/ACFFmpegCommandline.h "static std::string ffmpeg_cmd = \"${FFMPEG}\";")
        INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
	IF(APPLE AND NOT USE_DEBUG)
		MESSAGE(FATAL_ERROR "${PLUGIN_NAME} requires a file to be bundled, not yet done.")
	ENDIF()

	INCLUDE (${CMAKE_SOURCE_DIR}/cmake/AddMediaCyclePlugin.cmake)
	INCLUDE_DIRECTORIES (${CMAKE_SOURCE_DIR}/3rdparty/ffmpeg)
	ADD_MC_PLUGIN_LIBRARY(${PLUGIN_NAME})
	TARGET_LINK_LIBRARIES(${TARGET_NAME} ${FFMPEG_LIBRARIES})
	MESSAGE("[X] ${PLUGIN_PREFIX}${PLUGIN_NAME}")
ELSE()
	MESSAGE("[ ] ${PLUGIN_PREFIX}${PLUGIN_NAME}")
ENDIF()
